{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"ETS_CookBook This is the documentation the ETS CookBook, which is a collection of useful Python scripts used across ETS (a research group within TNO) models. The documentation for each script/function can be found by clicking on the navigation bar on the left (they are arranged by theme). Authors and contact Omar Usmani Omar.Usmani@TNO.nl Installation and use You can either copy the ETS_CookBook.py file (in src/ETS_CookBook) to your project and import it, or (preferably) install it via PyPi: pip install ETS_CookBook You also need to ensure that all the required libraries are installed. Their list in given in requirements.txt. You can do this with the following command: pip install -r requirements.txt To use the CookBook, import it as such: from ETS_CookBook import ETS_CookBook as cook Then you can call your functions as such: cook.reference_scale([0.26, 0.89]) (You can replace the as cook with something else, or even skip it altogether: if you do skip it, then call the functions with ETS_CookBook.function). License This cookbook is released under the Apache 2.0 . All accompanying documentation and manuals are released under the Creative Commons BY-SA 4.0 license Repository The code repository can be found here The distribution package can be found here Status This CookBook is a working version that will be updated with new functions as they are need in various projects. Functions will be updated as appropriate. You can contact the authors for bug reports, feature suggestions, or any questions you might have. Goals This module was forked from prior work, most notably from ChaProEV . The forking is due to the/desire to use the auxiliary functions developed in these projects in more project needs. Libraries used and licensing (See requirements.txt file for versions (corresponding to Python 3.11.1, which is the version used for developping and testing the model)) pip install -r requirements.txt Acknowledgements This CookBook has been developed within multiple projects, including the following: This project was partly develop under funding from European Climate, Infrastructure and Environment Executive Agency under the European Union\u2019s HORIZON Research and Innovation Actions under grant agreement N\u00b0101095998.","title":"Home"},{"location":"#ets_cookbook","text":"This is the documentation the ETS CookBook, which is a collection of useful Python scripts used across ETS (a research group within TNO) models. The documentation for each script/function can be found by clicking on the navigation bar on the left (they are arranged by theme).","title":"ETS_CookBook"},{"location":"#authors-and-contact","text":"Omar Usmani Omar.Usmani@TNO.nl","title":"Authors and contact"},{"location":"#installation-and-use","text":"You can either copy the ETS_CookBook.py file (in src/ETS_CookBook) to your project and import it, or (preferably) install it via PyPi: pip install ETS_CookBook You also need to ensure that all the required libraries are installed. Their list in given in requirements.txt. You can do this with the following command: pip install -r requirements.txt To use the CookBook, import it as such: from ETS_CookBook import ETS_CookBook as cook Then you can call your functions as such: cook.reference_scale([0.26, 0.89]) (You can replace the as cook with something else, or even skip it altogether: if you do skip it, then call the functions with ETS_CookBook.function).","title":"Installation and use"},{"location":"#license","text":"This cookbook is released under the Apache 2.0 . All accompanying documentation and manuals are released under the Creative Commons BY-SA 4.0 license","title":"License"},{"location":"#repository","text":"The code repository can be found here The distribution package can be found here","title":"Repository"},{"location":"#status","text":"This CookBook is a working version that will be updated with new functions as they are need in various projects. Functions will be updated as appropriate. You can contact the authors for bug reports, feature suggestions, or any questions you might have.","title":"Status"},{"location":"#goals","text":"This module was forked from prior work, most notably from ChaProEV . The forking is due to the/desire to use the auxiliary functions developed in these projects in more project needs.","title":"Goals"},{"location":"#libraries-used-and-licensing","text":"(See requirements.txt file for versions (corresponding to Python 3.11.1, which is the version used for developping and testing the model)) pip install -r requirements.txt","title":"Libraries used and licensing"},{"location":"#acknowledgements","text":"This CookBook has been developed within multiple projects, including the following: This project was partly develop under funding from European Climate, Infrastructure and Environment Executive Agency under the European Union\u2019s HORIZON Research and Innovation Actions under grant agreement N\u00b0101095998.","title":"Acknowledgements"},{"location":"check_if_folder_exists/","text":"Check if folder exists What it Checks if a folder exists. If it does not, it creates it. This way, users can set up a new (sub-)folder in the configuration file without having to ensure that it already exits or create it. Inputs folder_to_check This is a string with the name of a folder Output This function has no output (but creates a folder if it does not exist). Examples Tests Open issues","title":"Check if folder exists"},{"location":"check_if_folder_exists/#check-if-folder-exists","text":"","title":"Check if folder exists"},{"location":"check_if_folder_exists/#what-it","text":"Checks if a folder exists. If it does not, it creates it. This way, users can set up a new (sub-)folder in the configuration file without having to ensure that it already exits or create it.","title":"What it"},{"location":"check_if_folder_exists/#inputs","text":"","title":"Inputs"},{"location":"check_if_folder_exists/#folder_to_check","text":"This is a string with the name of a folder","title":"folder_to_check"},{"location":"check_if_folder_exists/#output","text":"This function has no output (but creates a folder if it does not exist).","title":"Output"},{"location":"check_if_folder_exists/#examples","text":"","title":"Examples"},{"location":"check_if_folder_exists/#_1","text":"","title":""},{"location":"check_if_folder_exists/#tests","text":"","title":"Tests"},{"location":"check_if_folder_exists/#_2","text":"","title":""},{"location":"check_if_folder_exists/#open-issues","text":"","title":"Open issues"},{"location":"clear_word_document/","text":"Clear Word document What it does Clears a Word document of its elements (text/paragraphs, tables, pictures.) Inputs Output Examples Tests Open issues","title":"Clear Word document"},{"location":"clear_word_document/#clear-word-document","text":"","title":"Clear Word document"},{"location":"clear_word_document/#what-it-does","text":"Clears a Word document of its elements (text/paragraphs, tables, pictures.)","title":"What it does"},{"location":"clear_word_document/#inputs","text":"","title":"Inputs"},{"location":"clear_word_document/#_1","text":"","title":""},{"location":"clear_word_document/#output","text":"","title":"Output"},{"location":"clear_word_document/#_2","text":"","title":""},{"location":"clear_word_document/#examples","text":"","title":"Examples"},{"location":"clear_word_document/#_3","text":"","title":""},{"location":"clear_word_document/#tests","text":"","title":"Tests"},{"location":"clear_word_document/#_4","text":"","title":""},{"location":"clear_word_document/#open-issues","text":"","title":"Open issues"},{"location":"database_tables_columns/","text":"Database tables columns What it does Returns a dictionary with the tables of a database as keys and their columns as values. Inputs Output Examples Tests Open issues","title":"Database tables columns"},{"location":"database_tables_columns/#database-tables-columns","text":"","title":"Database tables columns"},{"location":"database_tables_columns/#what-it-does","text":"Returns a dictionary with the tables of a database as keys and their columns as values.","title":"What it does"},{"location":"database_tables_columns/#inputs","text":"","title":"Inputs"},{"location":"database_tables_columns/#_1","text":"","title":""},{"location":"database_tables_columns/#output","text":"","title":"Output"},{"location":"database_tables_columns/#_2","text":"","title":""},{"location":"database_tables_columns/#examples","text":"","title":"Examples"},{"location":"database_tables_columns/#_3","text":"","title":""},{"location":"database_tables_columns/#tests","text":"","title":"Tests"},{"location":"database_tables_columns/#_4","text":"","title":""},{"location":"database_tables_columns/#open-issues","text":"","title":"Open issues"},{"location":"dataframe_from_Excel_table_name/","text":"DataFrame from Excel table name What it does This function looks up a given table name in an Excel file and returns a DataFrame containing the values of that table. Note that if the name does not exist (or is spelled wrongly (it's case-sensitive), the function will crash). The optional load_data_only parameter puts values in the table if set to True (its default value. A False value loads formulas). Inputs table_name Excel_file load_data_only Output DataFrame Examples Tests Potentials for crash Open issues","title":"DataFrame from Excel table name"},{"location":"dataframe_from_Excel_table_name/#dataframe-from-excel-table-name","text":"","title":"DataFrame from Excel table name"},{"location":"dataframe_from_Excel_table_name/#what-it-does","text":"This function looks up a given table name in an Excel file and returns a DataFrame containing the values of that table. Note that if the name does not exist (or is spelled wrongly (it's case-sensitive), the function will crash). The optional load_data_only parameter puts values in the table if set to True (its default value. A False value loads formulas).","title":"What it does"},{"location":"dataframe_from_Excel_table_name/#inputs","text":"","title":"Inputs"},{"location":"dataframe_from_Excel_table_name/#table_name","text":"","title":"table_name"},{"location":"dataframe_from_Excel_table_name/#excel_file","text":"","title":"Excel_file"},{"location":"dataframe_from_Excel_table_name/#load_data_only","text":"","title":"load_data_only"},{"location":"dataframe_from_Excel_table_name/#output","text":"","title":"Output"},{"location":"dataframe_from_Excel_table_name/#dataframe","text":"","title":"DataFrame"},{"location":"dataframe_from_Excel_table_name/#examples","text":"","title":"Examples"},{"location":"dataframe_from_Excel_table_name/#_1","text":"","title":""},{"location":"dataframe_from_Excel_table_name/#tests","text":"","title":"Tests"},{"location":"dataframe_from_Excel_table_name/#_2","text":"","title":""},{"location":"dataframe_from_Excel_table_name/#potentials-for-crash","text":"","title":"Potentials for crash"},{"location":"dataframe_from_Excel_table_name/#open-issues","text":"","title":"Open issues"},{"location":"dataframe_to_Excel/","text":"DataFrame to Excel What it does This function takes a DataFrame and puts it into a new sheet in an Excel workbook. If the sheet already exists, it will replace it. If the Excel workbook does not exist, the function creates it. Inputs dataframe_to_append Excel_workbook my_sheet Output Examples Tests Open issues","title":"DataFrame to Excel"},{"location":"dataframe_to_Excel/#dataframe-to-excel","text":"","title":"DataFrame to Excel"},{"location":"dataframe_to_Excel/#what-it-does","text":"This function takes a DataFrame and puts it into a new sheet in an Excel workbook. If the sheet already exists, it will replace it. If the Excel workbook does not exist, the function creates it.","title":"What it does"},{"location":"dataframe_to_Excel/#inputs","text":"","title":"Inputs"},{"location":"dataframe_to_Excel/#dataframe_to_append","text":"","title":"dataframe_to_append"},{"location":"dataframe_to_Excel/#excel_workbook","text":"","title":"Excel_workbook"},{"location":"dataframe_to_Excel/#my_sheet","text":"","title":"my_sheet"},{"location":"dataframe_to_Excel/#output","text":"","title":"Output"},{"location":"dataframe_to_Excel/#_1","text":"","title":""},{"location":"dataframe_to_Excel/#examples","text":"","title":"Examples"},{"location":"dataframe_to_Excel/#_2","text":"","title":""},{"location":"dataframe_to_Excel/#tests","text":"","title":"Tests"},{"location":"dataframe_to_Excel/#_3","text":"","title":""},{"location":"dataframe_to_Excel/#open-issues","text":"","title":"Open issues"},{"location":"dataframes_from_query_list/","text":"DataFrames from query list What it does This returns a list of DataFrames, each obtained from a query in the list Inputs Output Examples Tests Open issues","title":"DataFrames from query list"},{"location":"dataframes_from_query_list/#dataframes-from-query-list","text":"","title":"DataFrames from query list"},{"location":"dataframes_from_query_list/#what-it-does","text":"This returns a list of DataFrames, each obtained from a query in the list","title":"What it does"},{"location":"dataframes_from_query_list/#inputs","text":"","title":"Inputs"},{"location":"dataframes_from_query_list/#_1","text":"","title":""},{"location":"dataframes_from_query_list/#output","text":"","title":"Output"},{"location":"dataframes_from_query_list/#_2","text":"","title":""},{"location":"dataframes_from_query_list/#examples","text":"","title":"Examples"},{"location":"dataframes_from_query_list/#_3","text":"","title":""},{"location":"dataframes_from_query_list/#tests","text":"","title":"Tests"},{"location":"dataframes_from_query_list/#_4","text":"","title":""},{"location":"dataframes_from_query_list/#open-issues","text":"","title":"Open issues"},{"location":"delete_word_element/","text":"Delete Word element What it does Deletes a given element in a Word document. Inputs Output Examples Tests Open issues","title":"Delete Word element"},{"location":"delete_word_element/#delete-word-element","text":"","title":"Delete Word element"},{"location":"delete_word_element/#what-it-does","text":"Deletes a given element in a Word document.","title":"What it does"},{"location":"delete_word_element/#inputs","text":"","title":"Inputs"},{"location":"delete_word_element/#_1","text":"","title":""},{"location":"delete_word_element/#output","text":"","title":"Output"},{"location":"delete_word_element/#_2","text":"","title":""},{"location":"delete_word_element/#examples","text":"","title":"Examples"},{"location":"delete_word_element/#_3","text":"","title":""},{"location":"delete_word_element/#tests","text":"","title":"Tests"},{"location":"delete_word_element/#_4","text":"","title":""},{"location":"delete_word_element/#open-issues","text":"","title":"Open issues"},{"location":"download_and_save_file/","text":"Download and save file What it does Downloads a file from an URL and saves it. If the file is a zip file, the function extracts its contents. Inputs Output Examples Tests Open issues","title":"Download and save file"},{"location":"download_and_save_file/#download-and-save-file","text":"","title":"Download and save file"},{"location":"download_and_save_file/#what-it-does","text":"Downloads a file from an URL and saves it. If the file is a zip file, the function extracts its contents.","title":"What it does"},{"location":"download_and_save_file/#inputs","text":"","title":"Inputs"},{"location":"download_and_save_file/#_1","text":"","title":""},{"location":"download_and_save_file/#output","text":"","title":"Output"},{"location":"download_and_save_file/#_2","text":"","title":""},{"location":"download_and_save_file/#examples","text":"","title":"Examples"},{"location":"download_and_save_file/#_3","text":"","title":""},{"location":"download_and_save_file/#tests","text":"","title":"Tests"},{"location":"download_and_save_file/#_4","text":"","title":""},{"location":"download_and_save_file/#open-issues","text":"","title":"Open issues"},{"location":"from_grib_to_dataframe/","text":"From grib to DataFrame What it does This function takes a grib file and converts it to a DataFrame. Important note: You need to have ecmwflibs installed for the grib converter to work. Installing xarray (and cfrgrib to have the right engine) is not enough! See: https://github.com/ecmwf/eccodes-python/issues/54#issuecomment-925036724 Inputs Output Examples Tests Open issues installed libraries You need to have ecmwflibs installed for the grib converter to work. Installing xarray (and cfrgrib to have the right engine) is not enough! See: https://github.com/ecmwf/eccodes-python/issues/54#issuecomment-925036724","title":"From grib to DataFrame"},{"location":"from_grib_to_dataframe/#from-grib-to-dataframe","text":"","title":"From grib to DataFrame"},{"location":"from_grib_to_dataframe/#what-it-does","text":"This function takes a grib file and converts it to a DataFrame. Important note: You need to have ecmwflibs installed for the grib converter to work. Installing xarray (and cfrgrib to have the right engine) is not enough! See: https://github.com/ecmwf/eccodes-python/issues/54#issuecomment-925036724","title":"What it does"},{"location":"from_grib_to_dataframe/#inputs","text":"","title":"Inputs"},{"location":"from_grib_to_dataframe/#_1","text":"","title":""},{"location":"from_grib_to_dataframe/#output","text":"","title":"Output"},{"location":"from_grib_to_dataframe/#_2","text":"","title":""},{"location":"from_grib_to_dataframe/#examples","text":"","title":"Examples"},{"location":"from_grib_to_dataframe/#_3","text":"","title":""},{"location":"from_grib_to_dataframe/#tests","text":"","title":"Tests"},{"location":"from_grib_to_dataframe/#_4","text":"","title":""},{"location":"from_grib_to_dataframe/#open-issues","text":"","title":"Open issues"},{"location":"from_grib_to_dataframe/#installed-libraries","text":"You need to have ecmwflibs installed for the grib converter to work. Installing xarray (and cfrgrib to have the right engine) is not enough! See: https://github.com/ecmwf/eccodes-python/issues/54#issuecomment-925036724","title":"installed libraries"},{"location":"get_RGB_from_name/","text":"Get RGB from name What it does This function takes a color name and returns its RGB values (0 to 1). If the color name is in the extra colors, then, we use the values given. If it is a matplotlib color, then we use the matplotlib function. Inputs Output Examples Tests Open issues","title":"Get RGB from name"},{"location":"get_RGB_from_name/#get-rgb-from-name","text":"","title":"Get RGB from name"},{"location":"get_RGB_from_name/#what-it-does","text":"This function takes a color name and returns its RGB values (0 to 1). If the color name is in the extra colors, then, we use the values given. If it is a matplotlib color, then we use the matplotlib function.","title":"What it does"},{"location":"get_RGB_from_name/#inputs","text":"","title":"Inputs"},{"location":"get_RGB_from_name/#_1","text":"","title":""},{"location":"get_RGB_from_name/#output","text":"","title":"Output"},{"location":"get_RGB_from_name/#_2","text":"","title":""},{"location":"get_RGB_from_name/#examples","text":"","title":"Examples"},{"location":"get_RGB_from_name/#_3","text":"","title":""},{"location":"get_RGB_from_name/#tests","text":"","title":"Tests"},{"location":"get_RGB_from_name/#_4","text":"","title":""},{"location":"get_RGB_from_name/#open-issues","text":"","title":"Open issues"},{"location":"get_extra_colors/","text":"Get extra colors What it does This function gets the user-defined extra colors from a file. This file contains the names of the colors, and their RGB values (from 0 to 255). The function returns a DataFrame with color names as index, and their RGB codes (between 0 and 1) as values. Inputs Output Examples Tests Open issues","title":"Get extra colors"},{"location":"get_extra_colors/#get-extra-colors","text":"","title":"Get extra colors"},{"location":"get_extra_colors/#what-it-does","text":"This function gets the user-defined extra colors from a file. This file contains the names of the colors, and their RGB values (from 0 to 255). The function returns a DataFrame with color names as index, and their RGB codes (between 0 and 1) as values.","title":"What it does"},{"location":"get_extra_colors/#inputs","text":"","title":"Inputs"},{"location":"get_extra_colors/#_1","text":"","title":""},{"location":"get_extra_colors/#output","text":"","title":"Output"},{"location":"get_extra_colors/#_2","text":"","title":""},{"location":"get_extra_colors/#examples","text":"","title":"Examples"},{"location":"get_extra_colors/#_3","text":"","title":""},{"location":"get_extra_colors/#tests","text":"","title":"Tests"},{"location":"get_extra_colors/#_4","text":"","title":""},{"location":"get_extra_colors/#open-issues","text":"","title":"Open issues"},{"location":"get_map_area_data/","text":"Get map area data What it does This function gets and processes the area data and sets it into a DataFrame. It contains polygons/multipolygons (they are at a given granularity level, but also have references to higher levels). Inputs Output Examples Tests Open issues","title":"Get map area data"},{"location":"get_map_area_data/#get-map-area-data","text":"","title":"Get map area data"},{"location":"get_map_area_data/#what-it-does","text":"This function gets and processes the area data and sets it into a DataFrame. It contains polygons/multipolygons (they are at a given granularity level, but also have references to higher levels).","title":"What it does"},{"location":"get_map_area_data/#inputs","text":"","title":"Inputs"},{"location":"get_map_area_data/#_1","text":"","title":""},{"location":"get_map_area_data/#output","text":"","title":"Output"},{"location":"get_map_area_data/#_2","text":"","title":""},{"location":"get_map_area_data/#examples","text":"","title":"Examples"},{"location":"get_map_area_data/#_3","text":"","title":""},{"location":"get_map_area_data/#tests","text":"","title":"Tests"},{"location":"get_map_area_data/#_4","text":"","title":""},{"location":"get_map_area_data/#open-issues","text":"","title":"Open issues"},{"location":"get_map_borders_data/","text":"Get map borders What it does This function gets the borders/contours of regions at a specified NUTS level. Inputs Output Examples Tests Open issues","title":"Get map borders data"},{"location":"get_map_borders_data/#get-map-borders","text":"","title":"Get map borders"},{"location":"get_map_borders_data/#what-it-does","text":"This function gets the borders/contours of regions at a specified NUTS level.","title":"What it does"},{"location":"get_map_borders_data/#inputs","text":"","title":"Inputs"},{"location":"get_map_borders_data/#_1","text":"","title":""},{"location":"get_map_borders_data/#output","text":"","title":"Output"},{"location":"get_map_borders_data/#_2","text":"","title":""},{"location":"get_map_borders_data/#examples","text":"","title":"Examples"},{"location":"get_map_borders_data/#_3","text":"","title":""},{"location":"get_map_borders_data/#tests","text":"","title":"Tests"},{"location":"get_map_borders_data/#_4","text":"","title":""},{"location":"get_map_borders_data/#open-issues","text":"","title":"Open issues"},{"location":"get_map_points_data/","text":"Get map points What it does This function gets the points/labels of regions at a specified NUTS level. Inputs Output Examples Tests Open issues","title":"Get map points data"},{"location":"get_map_points_data/#get-map-points","text":"","title":"Get map points"},{"location":"get_map_points_data/#what-it-does","text":"This function gets the points/labels of regions at a specified NUTS level.","title":"What it does"},{"location":"get_map_points_data/#inputs","text":"","title":"Inputs"},{"location":"get_map_points_data/#_1","text":"","title":""},{"location":"get_map_points_data/#output","text":"","title":"Output"},{"location":"get_map_points_data/#_2","text":"","title":""},{"location":"get_map_points_data/#examples","text":"","title":"Examples"},{"location":"get_map_points_data/#_3","text":"","title":""},{"location":"get_map_points_data/#tests","text":"","title":"Tests"},{"location":"get_map_points_data/#_4","text":"","title":""},{"location":"get_map_points_data/#open-issues","text":"","title":"Open issues"},{"location":"get_nested_values/","text":"Get nested values What it does If you give a dictionary (for example a TOML configuration file) and a list of nested keys, this returns the desired value. Inputs Output Examples Tests Open issues","title":"Get nested values"},{"location":"get_nested_values/#get-nested-values","text":"","title":"Get nested values"},{"location":"get_nested_values/#what-it-does","text":"If you give a dictionary (for example a TOML configuration file) and a list of nested keys, this returns the desired value.","title":"What it does"},{"location":"get_nested_values/#inputs","text":"","title":"Inputs"},{"location":"get_nested_values/#_1","text":"","title":""},{"location":"get_nested_values/#output","text":"","title":"Output"},{"location":"get_nested_values/#_2","text":"","title":""},{"location":"get_nested_values/#examples","text":"","title":"Examples"},{"location":"get_nested_values/#_3","text":"","title":""},{"location":"get_nested_values/#tests","text":"","title":"Tests"},{"location":"get_nested_values/#_4","text":"","title":""},{"location":"get_nested_values/#open-issues","text":"","title":"Open issues"},{"location":"get_rgb_255_code_string/","text":"Get RGB 255 code string What it does Creates a string with rgb values (0-255), rgb(111, 233, 66) This is used for plotly. Inputs Output Examples Tests Open issues","title":"Get RGB 255 code string"},{"location":"get_rgb_255_code_string/#get-rgb-255-code-string","text":"","title":"Get RGB 255 code string"},{"location":"get_rgb_255_code_string/#what-it-does","text":"Creates a string with rgb values (0-255), rgb(111, 233, 66) This is used for plotly.","title":"What it does"},{"location":"get_rgb_255_code_string/#inputs","text":"","title":"Inputs"},{"location":"get_rgb_255_code_string/#_1","text":"","title":""},{"location":"get_rgb_255_code_string/#output","text":"","title":"Output"},{"location":"get_rgb_255_code_string/#_2","text":"","title":""},{"location":"get_rgb_255_code_string/#examples","text":"","title":"Examples"},{"location":"get_rgb_255_code_string/#_3","text":"","title":""},{"location":"get_rgb_255_code_string/#tests","text":"","title":"Tests"},{"location":"get_rgb_255_code_string/#_4","text":"","title":""},{"location":"get_rgb_255_code_string/#open-issues","text":"","title":"Open issues"},{"location":"get_season/","text":"Get season What it does This function takes a datetime timestamp and tells us in which season it is. Inputs Output Examples Tests Open issues","title":"Get season"},{"location":"get_season/#get-season","text":"","title":"Get season"},{"location":"get_season/#what-it-does","text":"This function takes a datetime timestamp and tells us in which season it is.","title":"What it does"},{"location":"get_season/#inputs","text":"","title":"Inputs"},{"location":"get_season/#_1","text":"","title":""},{"location":"get_season/#output","text":"","title":"Output"},{"location":"get_season/#_2","text":"","title":""},{"location":"get_season/#examples","text":"","title":"Examples"},{"location":"get_season/#_3","text":"","title":""},{"location":"get_season/#tests","text":"","title":"Tests"},{"location":"get_season/#_4","text":"","title":""},{"location":"get_season/#open-issues","text":"","title":"Open issues"},{"location":"make_cell_text_vertical/","text":"Make cell text vertical What it does Changes the orientation of a Word table cell to vertical, with the option to get text from bottom to top (default) or top to bottom (set the optional bottom_to_top argument to True) See https://stackoverflow.com/questions/47738013/how-to-rotate-text-in-table-cells for a breakdown Inputs Output Examples Tests Open issues","title":"Make cell text vertical"},{"location":"make_cell_text_vertical/#make-cell-text-vertical","text":"","title":"Make cell text vertical"},{"location":"make_cell_text_vertical/#what-it-does","text":"Changes the orientation of a Word table cell to vertical, with the option to get text from bottom to top (default) or top to bottom (set the optional bottom_to_top argument to True) See https://stackoverflow.com/questions/47738013/how-to-rotate-text-in-table-cells for a breakdown","title":"What it does"},{"location":"make_cell_text_vertical/#inputs","text":"","title":"Inputs"},{"location":"make_cell_text_vertical/#_1","text":"","title":""},{"location":"make_cell_text_vertical/#output","text":"","title":"Output"},{"location":"make_cell_text_vertical/#_2","text":"","title":""},{"location":"make_cell_text_vertical/#examples","text":"","title":"Examples"},{"location":"make_cell_text_vertical/#_3","text":"","title":""},{"location":"make_cell_text_vertical/#tests","text":"","title":"Tests"},{"location":"make_cell_text_vertical/#_4","text":"","title":""},{"location":"make_cell_text_vertical/#open-issues","text":"","title":"Open issues"},{"location":"make_quantity_map/","text":"Make quantity map What it does Makes one of the quantity maps in a map grid. Inputs Output Examples Tests Open issues","title":"Make quantity map"},{"location":"make_quantity_map/#make-quantity-map","text":"","title":"Make quantity map"},{"location":"make_quantity_map/#what-it-does","text":"Makes one of the quantity maps in a map grid.","title":"What it does"},{"location":"make_quantity_map/#inputs","text":"","title":"Inputs"},{"location":"make_quantity_map/#_1","text":"","title":""},{"location":"make_quantity_map/#output","text":"","title":"Output"},{"location":"make_quantity_map/#_2","text":"","title":""},{"location":"make_quantity_map/#examples","text":"","title":"Examples"},{"location":"make_quantity_map/#_3","text":"","title":""},{"location":"make_quantity_map/#tests","text":"","title":"Tests"},{"location":"make_quantity_map/#_4","text":"","title":""},{"location":"make_quantity_map/#open-issues","text":"","title":"Open issues"},{"location":"make_query_filter/","text":"Make query filter What it does Returns a query filter string that can be used in an SQL query. Inputs Output Examples Tests Open issues","title":"Make query filter"},{"location":"make_query_filter/#make-query-filter","text":"","title":"Make query filter"},{"location":"make_query_filter/#what-it-does","text":"Returns a query filter string that can be used in an SQL query.","title":"What it does"},{"location":"make_query_filter/#inputs","text":"","title":"Inputs"},{"location":"make_query_filter/#_1","text":"","title":""},{"location":"make_query_filter/#output","text":"","title":"Output"},{"location":"make_query_filter/#_2","text":"","title":""},{"location":"make_query_filter/#examples","text":"","title":"Examples"},{"location":"make_query_filter/#_3","text":"","title":""},{"location":"make_query_filter/#tests","text":"","title":"Tests"},{"location":"make_query_filter/#_4","text":"","title":""},{"location":"make_query_filter/#open-issues","text":"","title":"Open issues"},{"location":"make_sankey/","text":"Make Sankey What it does Makes a Sankey plot in plotly (comes out as an html file). The nodes and links are in a DataFrame. Inputs Output Examples Tests Open issues","title":"Make Sankey"},{"location":"make_sankey/#make-sankey","text":"","title":"Make Sankey"},{"location":"make_sankey/#what-it-does","text":"Makes a Sankey plot in plotly (comes out as an html file). The nodes and links are in a DataFrame.","title":"What it does"},{"location":"make_sankey/#inputs","text":"","title":"Inputs"},{"location":"make_sankey/#_1","text":"","title":""},{"location":"make_sankey/#output","text":"","title":"Output"},{"location":"make_sankey/#_2","text":"","title":""},{"location":"make_sankey/#examples","text":"","title":"Examples"},{"location":"make_sankey/#_3","text":"","title":""},{"location":"make_sankey/#tests","text":"","title":"Tests"},{"location":"make_sankey/#_4","text":"","title":""},{"location":"make_sankey/#open-issues","text":"","title":"Open issues"},{"location":"make_spider_chart/","text":"Make spider chart What it does This draws a spider/radar chart on a matplotlib plot/PolarAxes object. Inputs spider_plot This is the plot on which the chart will be drawn. It needs to be a PolarAxes (matplotlib.projections.polar.PolarAxes). series_label This is a label for your series of data, in the form of a string. data_labels This a list of strings labelling each of your data points. data_values This is a list of floats that contains the values of each of your elements (how far from the center of the spider they are). ticks This is a list (of floats) of ticks along the spider (they should at least cover all your data values). tick_labels This is a list of labels corresponding to the ticks above. The list needs to be of the same length as the one above, with each element corresponding to the one in the above list. spider_color A string giveing the color name (see here for a list). spider_marker A string to set the markers for each data point. See here for options. spider_linewidth A float setting the with o the spider line spider_alpha A float (between 0 and 1) setting the opacity of the spider (0=fully transparent, 1=fully opaque) Output This returns a plot (PolarAxes) with the spider chart drawn on it. Use the same plot/PolarAxesas output as you used for input, so that you can superpose spiders. Examples Two spiders series_label = 'SFC' data_values = [0.6, 0, 0.26, 0.42, 0.89, 0.77] data_labels = ['Mango', 'Mapo', 'Lacrosse', 'Floorball', 'Switch', 'NDS'] ticks = [0, 0.25, 0.50, 0.75, 1.0] tick_labels = ['0%', '25%', '50%', '75%', '100%'] spider_color = 'fuchsia' spider_marker = 'o' spider_linewidth = 2 spider_figure = plt.figure() spider_plot = spider_figure.add_subplot(111, polar=True) spider_alpha = 0.26 spider_plot = make_spider_chart( spider_plot, series_label, data_labels, data_values, ticks, tick_labels, spider_color, spider_marker, spider_linewidth, spider_alpha, ) spider_color = 'dodgerblue' series_label = 'GSHC' data_values = [0.52, 0.18, 0.29, 0.39, 0.66, 0.42] spider_plot = make_spider_chart( spider_plot, series_label, data_labels, data_values, ticks, tick_labels, spider_color, spider_marker, spider_linewidth, spider_alpha, ) spider_figure.savefig('docs/spider_example.png') Note that we use spider_plot as both input and output of make_spider_chart. We do this so that we can plot two spiders on top of each other (by calling the function twice). Tests Theta labels This test looks if the function sets the theta labels (around the spider) to the data labels. Typing issues Axes versus PolarAxes You might encounter an issue when running a MyPy (or other) type check. This comes from this line: spider_plot.set_thetagrids(angles * 180 / np.pi, data_labels) This puts the data labels as the theta labels (around the spider) requires spider_plot to be a PolarAxes (matplotlib.projecions.polar.PolarAxes) element because set_thetagrids is an attribute of PolarAxes (and not Axes). The problem is that the functions used to create a plot (an Axes element) claim to only create Axes, even if they create a PolarAxes, such as with the line below: spider_plot = spider_figure.add_subplot(111, polar=True) Matplotlib claims that add_subplot creates an Axes object, but the result is a PolarAxes. This means that a type check (such as MyPy) might throw an error. This might be solved if matplotlib updates its typing documentation by adding the possibility that add_subplot can also create a PolarAxes. Open issues Colors outside of matplotlib Need to add support for colors other than matplotlib (via RGB)","title":"Make spider chart"},{"location":"make_spider_chart/#make-spider-chart","text":"","title":"Make spider chart"},{"location":"make_spider_chart/#what-it-does","text":"This draws a spider/radar chart on a matplotlib plot/PolarAxes object.","title":"What it does"},{"location":"make_spider_chart/#inputs","text":"","title":"Inputs"},{"location":"make_spider_chart/#spider_plot","text":"This is the plot on which the chart will be drawn. It needs to be a PolarAxes (matplotlib.projections.polar.PolarAxes).","title":"spider_plot"},{"location":"make_spider_chart/#series_label","text":"This is a label for your series of data, in the form of a string.","title":"series_label"},{"location":"make_spider_chart/#data_labels","text":"This a list of strings labelling each of your data points.","title":"data_labels"},{"location":"make_spider_chart/#data_values","text":"This is a list of floats that contains the values of each of your elements (how far from the center of the spider they are).","title":"data_values"},{"location":"make_spider_chart/#ticks","text":"This is a list (of floats) of ticks along the spider (they should at least cover all your data values).","title":"ticks"},{"location":"make_spider_chart/#tick_labels","text":"This is a list of labels corresponding to the ticks above. The list needs to be of the same length as the one above, with each element corresponding to the one in the above list.","title":"tick_labels"},{"location":"make_spider_chart/#spider_color","text":"A string giveing the color name (see here for a list).","title":"spider_color"},{"location":"make_spider_chart/#spider_marker","text":"A string to set the markers for each data point. See here for options.","title":"spider_marker"},{"location":"make_spider_chart/#spider_linewidth","text":"A float setting the with o the spider line","title":"spider_linewidth"},{"location":"make_spider_chart/#spider_alpha","text":"A float (between 0 and 1) setting the opacity of the spider (0=fully transparent, 1=fully opaque)","title":"spider_alpha"},{"location":"make_spider_chart/#output","text":"This returns a plot (PolarAxes) with the spider chart drawn on it. Use the same plot/PolarAxesas output as you used for input, so that you can superpose spiders.","title":"Output"},{"location":"make_spider_chart/#examples","text":"","title":"Examples"},{"location":"make_spider_chart/#two-spiders","text":"series_label = 'SFC' data_values = [0.6, 0, 0.26, 0.42, 0.89, 0.77] data_labels = ['Mango', 'Mapo', 'Lacrosse', 'Floorball', 'Switch', 'NDS'] ticks = [0, 0.25, 0.50, 0.75, 1.0] tick_labels = ['0%', '25%', '50%', '75%', '100%'] spider_color = 'fuchsia' spider_marker = 'o' spider_linewidth = 2 spider_figure = plt.figure() spider_plot = spider_figure.add_subplot(111, polar=True) spider_alpha = 0.26 spider_plot = make_spider_chart( spider_plot, series_label, data_labels, data_values, ticks, tick_labels, spider_color, spider_marker, spider_linewidth, spider_alpha, ) spider_color = 'dodgerblue' series_label = 'GSHC' data_values = [0.52, 0.18, 0.29, 0.39, 0.66, 0.42] spider_plot = make_spider_chart( spider_plot, series_label, data_labels, data_values, ticks, tick_labels, spider_color, spider_marker, spider_linewidth, spider_alpha, ) spider_figure.savefig('docs/spider_example.png') Note that we use spider_plot as both input and output of make_spider_chart. We do this so that we can plot two spiders on top of each other (by calling the function twice).","title":"Two spiders"},{"location":"make_spider_chart/#tests","text":"","title":"Tests"},{"location":"make_spider_chart/#theta-labels","text":"This test looks if the function sets the theta labels (around the spider) to the data labels.","title":"Theta labels"},{"location":"make_spider_chart/#typing-issues","text":"","title":"Typing issues"},{"location":"make_spider_chart/#axes-versus-polaraxes","text":"You might encounter an issue when running a MyPy (or other) type check. This comes from this line: spider_plot.set_thetagrids(angles * 180 / np.pi, data_labels) This puts the data labels as the theta labels (around the spider) requires spider_plot to be a PolarAxes (matplotlib.projecions.polar.PolarAxes) element because set_thetagrids is an attribute of PolarAxes (and not Axes). The problem is that the functions used to create a plot (an Axes element) claim to only create Axes, even if they create a PolarAxes, such as with the line below: spider_plot = spider_figure.add_subplot(111, polar=True) Matplotlib claims that add_subplot creates an Axes object, but the result is a PolarAxes. This means that a type check (such as MyPy) might throw an error. This might be solved if matplotlib updates its typing documentation by adding the possibility that add_subplot can also create a PolarAxes.","title":"Axes versus PolarAxes"},{"location":"make_spider_chart/#open-issues","text":"","title":"Open issues"},{"location":"make_spider_chart/#colors-outside-of-matplotlib","text":"Need to add support for colors other than matplotlib (via RGB)","title":"Colors outside of matplotlib"},{"location":"map_grid/","text":"Map grid What it does This function creates a grid of maps. You need to give it the data you want to plot, the names of the quantities, and their colors, as well as some plot parameters (in your general parameters file, under a [map_grid_plot] header). You also need to have a map areas data file such as this one: https://www.naturalearthdata.com/http//www.naturalearthdata.com/download/110m/cultural/ne_110m_admin_0_countries.zip You also need to provide a csv file that translates the names of the countries you are using into ISOA3 codes, which can be found here https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3 Inputs Output Examples Tests Open issues","title":"Map grid"},{"location":"map_grid/#map-grid","text":"","title":"Map grid"},{"location":"map_grid/#what-it-does","text":"This function creates a grid of maps. You need to give it the data you want to plot, the names of the quantities, and their colors, as well as some plot parameters (in your general parameters file, under a [map_grid_plot] header). You also need to have a map areas data file such as this one: https://www.naturalearthdata.com/http//www.naturalearthdata.com/download/110m/cultural/ne_110m_admin_0_countries.zip You also need to provide a csv file that translates the names of the countries you are using into ISOA3 codes, which can be found here https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3","title":"What it does"},{"location":"map_grid/#inputs","text":"","title":"Inputs"},{"location":"map_grid/#_1","text":"","title":""},{"location":"map_grid/#output","text":"","title":"Output"},{"location":"map_grid/#_2","text":"","title":""},{"location":"map_grid/#examples","text":"","title":"Examples"},{"location":"map_grid/#_3","text":"","title":""},{"location":"map_grid/#tests","text":"","title":"Tests"},{"location":"map_grid/#_4","text":"","title":""},{"location":"map_grid/#open-issues","text":"","title":"Open issues"},{"location":"parameters_from_TOML/","text":"Parameters from TOML What it does Reads a TOML parameters file name and returns a dictionary of parameters. Inputs parameters_file_name A string containing the path and name of a TOML file. Output Examples Tests Open issues","title":"Parameters from TOML"},{"location":"parameters_from_TOML/#parameters-from-toml","text":"","title":"Parameters from TOML"},{"location":"parameters_from_TOML/#what-it-does","text":"Reads a TOML parameters file name and returns a dictionary of parameters.","title":"What it does"},{"location":"parameters_from_TOML/#inputs","text":"","title":"Inputs"},{"location":"parameters_from_TOML/#parameters_file_name","text":"A string containing the path and name of a TOML file.","title":"parameters_file_name"},{"location":"parameters_from_TOML/#output","text":"","title":"Output"},{"location":"parameters_from_TOML/#_1","text":"","title":""},{"location":"parameters_from_TOML/#examples","text":"","title":"Examples"},{"location":"parameters_from_TOML/#_2","text":"","title":""},{"location":"parameters_from_TOML/#tests","text":"","title":"Tests"},{"location":"parameters_from_TOML/#_3","text":"","title":""},{"location":"parameters_from_TOML/#open-issues","text":"","title":"Open issues"},{"location":"put_dataframe_in_sql_in_chunks/","text":"Put DataFrame in SQL in chunks What it does This function takes a DataFrame and writes it into the table of an SQL database. It does so in chunks to avoid memory issues. The parameter drop_existing table tells us if we want to drop/overwrite the table if it exists (it is True by default). If set to False, the data will be appended (if the table exists). Inputs Output Examples Tests Open issues","title":"Put DataFrame in SQL in chunks"},{"location":"put_dataframe_in_sql_in_chunks/#put-dataframe-in-sql-in-chunks","text":"","title":"Put DataFrame in SQL in chunks"},{"location":"put_dataframe_in_sql_in_chunks/#what-it-does","text":"This function takes a DataFrame and writes it into the table of an SQL database. It does so in chunks to avoid memory issues. The parameter drop_existing table tells us if we want to drop/overwrite the table if it exists (it is True by default). If set to False, the data will be appended (if the table exists).","title":"What it does"},{"location":"put_dataframe_in_sql_in_chunks/#inputs","text":"","title":"Inputs"},{"location":"put_dataframe_in_sql_in_chunks/#_1","text":"","title":""},{"location":"put_dataframe_in_sql_in_chunks/#output","text":"","title":"Output"},{"location":"put_dataframe_in_sql_in_chunks/#_2","text":"","title":""},{"location":"put_dataframe_in_sql_in_chunks/#examples","text":"","title":"Examples"},{"location":"put_dataframe_in_sql_in_chunks/#_3","text":"","title":""},{"location":"put_dataframe_in_sql_in_chunks/#tests","text":"","title":"Tests"},{"location":"put_dataframe_in_sql_in_chunks/#_4","text":"","title":""},{"location":"put_dataframe_in_sql_in_chunks/#open-issues","text":"","title":"Open issues"},{"location":"put_dataframe_in_word_document/","text":"Put DataFrame in Word document What it does This function puts a Dataframe into a given Word document. If the document does not exist, it is created. You can also optionally specify number formats for each column (in a list). If you do not provide the same amount of formats as there are columns in your DataFrame, then only the first one will be used across all columns. If you don't provide any format list, then the default is that your numbers will be displayed with two decimals. You can also provide a table format. Note that the table style must exist in the document for you to be able to use it (so make document, put a table in it with the style you want, and delete the table before saving). If it does not, you can use the defaults listed here: https://python-docx.readthedocs.io/en/latest/user/styles-understanding.html or simply omit the style argument. You can also indicate which code you want to use for empty values (the default is an empty string) Identical headers are merged by default and merged rows have their text flipped by default (you can also change the default bottom to top flip). Inputs Output Examples Tests Open issues","title":"Put DataFrame in Word document"},{"location":"put_dataframe_in_word_document/#put-dataframe-in-word-document","text":"","title":"Put DataFrame in Word document"},{"location":"put_dataframe_in_word_document/#what-it-does","text":"This function puts a Dataframe into a given Word document. If the document does not exist, it is created. You can also optionally specify number formats for each column (in a list). If you do not provide the same amount of formats as there are columns in your DataFrame, then only the first one will be used across all columns. If you don't provide any format list, then the default is that your numbers will be displayed with two decimals. You can also provide a table format. Note that the table style must exist in the document for you to be able to use it (so make document, put a table in it with the style you want, and delete the table before saving). If it does not, you can use the defaults listed here: https://python-docx.readthedocs.io/en/latest/user/styles-understanding.html or simply omit the style argument. You can also indicate which code you want to use for empty values (the default is an empty string) Identical headers are merged by default and merged rows have their text flipped by default (you can also change the default bottom to top flip).","title":"What it does"},{"location":"put_dataframe_in_word_document/#inputs","text":"","title":"Inputs"},{"location":"put_dataframe_in_word_document/#_1","text":"","title":""},{"location":"put_dataframe_in_word_document/#output","text":"","title":"Output"},{"location":"put_dataframe_in_word_document/#_2","text":"","title":""},{"location":"put_dataframe_in_word_document/#examples","text":"","title":"Examples"},{"location":"put_dataframe_in_word_document/#_3","text":"","title":""},{"location":"put_dataframe_in_word_document/#tests","text":"","title":"Tests"},{"location":"put_dataframe_in_word_document/#_4","text":"","title":""},{"location":"put_dataframe_in_word_document/#open-issues","text":"","title":"Open issues"},{"location":"put_plots_on_map/","text":"Put plots on map What it does Puts plots/Axes on a map figure. You can then draw in these. The plot_y_total_values are the sizes of the plots per country (for example the size of the stacked bar for a stacked bar plot). Inputs Output Examples Tests Open issues","title":"Put plots on map"},{"location":"put_plots_on_map/#put-plots-on-map","text":"","title":"Put plots on map"},{"location":"put_plots_on_map/#what-it-does","text":"Puts plots/Axes on a map figure. You can then draw in these. The plot_y_total_values are the sizes of the plots per country (for example the size of the stacked bar for a stacked bar plot).","title":"What it does"},{"location":"put_plots_on_map/#inputs","text":"","title":"Inputs"},{"location":"put_plots_on_map/#_1","text":"","title":""},{"location":"put_plots_on_map/#output","text":"","title":"Output"},{"location":"put_plots_on_map/#_2","text":"","title":""},{"location":"put_plots_on_map/#examples","text":"","title":"Examples"},{"location":"put_plots_on_map/#_3","text":"","title":""},{"location":"put_plots_on_map/#tests","text":"","title":"Tests"},{"location":"put_plots_on_map/#_4","text":"","title":""},{"location":"put_plots_on_map/#open-issues","text":"","title":"Open issues"},{"location":"query_list_from_file/","text":"Query list from file What it does This returns a list of queries from an SQL file Inputs Output Examples Tests Open issues","title":"Query list from file"},{"location":"query_list_from_file/#query-list-from-file","text":"","title":"Query list from file"},{"location":"query_list_from_file/#what-it-does","text":"This returns a list of queries from an SQL file","title":"What it does"},{"location":"query_list_from_file/#inputs","text":"","title":"Inputs"},{"location":"query_list_from_file/#_1","text":"","title":""},{"location":"query_list_from_file/#output","text":"","title":"Output"},{"location":"query_list_from_file/#_2","text":"","title":""},{"location":"query_list_from_file/#examples","text":"","title":"Examples"},{"location":"query_list_from_file/#_3","text":"","title":""},{"location":"query_list_from_file/#tests","text":"","title":"Tests"},{"location":"query_list_from_file/#_4","text":"","title":""},{"location":"query_list_from_file/#open-issues","text":"","title":"Open issues"},{"location":"read_query_generator/","text":"Read query geerator What it does This function returns an sql read/select query string that can be used (for example) in Panda's read_sql. - query_filter_values: The comparison values used for the filter. The three special cases are: 1) Like: This needs to be a double quote string (since it will be nested into a single-quote string) with percentage signs, such as '\"%2020-05-08%\"' for timestamps for May 8th, 2020 2) Between: Provide the two values into a list. If the values arte strings that contain spaces, you need nested quotes, such as: ['\"2020-05-08 00:00:00\"','\"2020-06-26 16:00:00\"'] 3) In provide the two tuple values into a list., e.g: [(52.1,4.9),(52.0,5.1)] Inputs quantities_to_display A string list of table column names (as strings, in single quotes), separated by commas. If the user wants all columns displayed, then they should use a '*'. If one (or more) of the column names have spaces, then the user needs to use f strings and double quotes, as in the following example: quantity_1 = 'Time' quantity_2 = 'Surveyed Area' quantity_2_with_quotes = f'\"quantity_2\"' quantities_to_display = f'{quantity_1}, {quantity_2_with_quotes}' This latter variable is the input for the function. source_table A string that is the name of the source table. Note that it has a similar need if the name has spaces, so use: source_table = f'\"My Table\"' as an input. query_filter_quantities: A list of strings each representing a column name the user wants to filter. Again, names with spaces require f-strings and double quotes, so add: f'\"Surveyed Area\"' to your list of filter names. query_filter_types This list of strings (the list has to be the same length as the above list of quantities) says which filter to use. Currently supported options are: '=' (equal to) '<' (smaller than) '>' (larger than) '!=' (not equal) '<>' (not equal) '<=' (smalller or equal) '>=' (larger or equal) 'like' (matches/ searches for a pattern) 'between' (between two values) 'in' (to select multiple values for one or several columns) query_filter_values A list of strings (the length of the list needs to be the same as the above two) containing comparison values used for the filter. The three special cases are: 1) Like: This needs to be a double quote string (since it will be nested into a single-quote string) with percentage signs, such as '\"%2020-05-08%\"' for timestamps for May 8th, 2020 2) Between: Provide the two values into a list. If the values arte strings that contain spaces, you need nested quotes, such as: ['\"2020-05-08 00:00:00\"','\"2020-06-26 16:00:00\"'] 3) In provide the two tuple values into a list., e.g: [(52.1,4.9),(52.0,5.1)] Output Examples Tests Open issues Add default lists with empty strings","title":"Read query generator"},{"location":"read_query_generator/#read-query-geerator","text":"","title":"Read query geerator"},{"location":"read_query_generator/#what-it-does","text":"This function returns an sql read/select query string that can be used (for example) in Panda's read_sql. - query_filter_values: The comparison values used for the filter. The three special cases are: 1) Like: This needs to be a double quote string (since it will be nested into a single-quote string) with percentage signs, such as '\"%2020-05-08%\"' for timestamps for May 8th, 2020 2) Between: Provide the two values into a list. If the values arte strings that contain spaces, you need nested quotes, such as: ['\"2020-05-08 00:00:00\"','\"2020-06-26 16:00:00\"'] 3) In provide the two tuple values into a list., e.g: [(52.1,4.9),(52.0,5.1)]","title":"What it does"},{"location":"read_query_generator/#inputs","text":"","title":"Inputs"},{"location":"read_query_generator/#quantities_to_display","text":"A string list of table column names (as strings, in single quotes), separated by commas. If the user wants all columns displayed, then they should use a '*'. If one (or more) of the column names have spaces, then the user needs to use f strings and double quotes, as in the following example: quantity_1 = 'Time' quantity_2 = 'Surveyed Area' quantity_2_with_quotes = f'\"quantity_2\"' quantities_to_display = f'{quantity_1}, {quantity_2_with_quotes}' This latter variable is the input for the function.","title":"quantities_to_display"},{"location":"read_query_generator/#source_table","text":"A string that is the name of the source table. Note that it has a similar need if the name has spaces, so use: source_table = f'\"My Table\"' as an input.","title":"source_table"},{"location":"read_query_generator/#query_filter_quantities","text":"A list of strings each representing a column name the user wants to filter. Again, names with spaces require f-strings and double quotes, so add: f'\"Surveyed Area\"' to your list of filter names.","title":"query_filter_quantities:"},{"location":"read_query_generator/#query_filter_types","text":"This list of strings (the list has to be the same length as the above list of quantities) says which filter to use. Currently supported options are: '=' (equal to) '<' (smaller than) '>' (larger than) '!=' (not equal) '<>' (not equal) '<=' (smalller or equal) '>=' (larger or equal) 'like' (matches/ searches for a pattern) 'between' (between two values) 'in' (to select multiple values for one or several columns)","title":"query_filter_types"},{"location":"read_query_generator/#query_filter_values","text":"A list of strings (the length of the list needs to be the same as the above two) containing comparison values used for the filter. The three special cases are: 1) Like: This needs to be a double quote string (since it will be nested into a single-quote string) with percentage signs, such as '\"%2020-05-08%\"' for timestamps for May 8th, 2020 2) Between: Provide the two values into a list. If the values arte strings that contain spaces, you need nested quotes, such as: ['\"2020-05-08 00:00:00\"','\"2020-06-26 16:00:00\"'] 3) In provide the two tuple values into a list., e.g: [(52.1,4.9),(52.0,5.1)]","title":"query_filter_values"},{"location":"read_query_generator/#output","text":"","title":"Output"},{"location":"read_query_generator/#_1","text":"","title":""},{"location":"read_query_generator/#examples","text":"","title":"Examples"},{"location":"read_query_generator/#_2","text":"","title":""},{"location":"read_query_generator/#tests","text":"","title":"Tests"},{"location":"read_query_generator/#_3","text":"","title":""},{"location":"read_query_generator/#open-issues","text":"","title":"Open issues"},{"location":"read_query_generator/#add-default-lists-with-empty-strings","text":"","title":"Add default lists with empty strings"},{"location":"read_table_from_database/","text":"Read table from database What it does Reads a table from an SQLite3 database and returns it as a DataFrame. Inputs Output Examples Tests Open issues","title":"Read table from database"},{"location":"read_table_from_database/#read-table-from-database","text":"","title":"Read table from database"},{"location":"read_table_from_database/#what-it-does","text":"Reads a table from an SQLite3 database and returns it as a DataFrame.","title":"What it does"},{"location":"read_table_from_database/#inputs","text":"","title":"Inputs"},{"location":"read_table_from_database/#_1","text":"","title":""},{"location":"read_table_from_database/#output","text":"","title":"Output"},{"location":"read_table_from_database/#_2","text":"","title":""},{"location":"read_table_from_database/#examples","text":"","title":"Examples"},{"location":"read_table_from_database/#_3","text":"","title":""},{"location":"read_table_from_database/#tests","text":"","title":"Tests"},{"location":"read_table_from_database/#_4","text":"","title":""},{"location":"read_table_from_database/#open-issues","text":"","title":"Open issues"},{"location":"reference_scale/","text":"Reference scale What it does This function takes a list of numbers and returns a scale (lower and upper boundary) they are in. The digit shift parameter tells us on which digit we need to focus. The default is 0, so the upper boundary of 53.57 will be 60 by default, but 54 if the digit shift is 1 (thus focussing on the 3 part). This can for example be useful to determine the plotting area of a dataset (x-axis boundaries). Error avoidance Inputs number_list A list of floats digit_shift An integer that .... The default value is 0. Output Reference scale A list of two floats that ..... Examples Tests Basic test digit shift test With zero as a boundary With negatives Zero error avoidance Open issues","title":"Reference scale"},{"location":"reference_scale/#reference-scale","text":"","title":"Reference scale"},{"location":"reference_scale/#what-it-does","text":"This function takes a list of numbers and returns a scale (lower and upper boundary) they are in. The digit shift parameter tells us on which digit we need to focus. The default is 0, so the upper boundary of 53.57 will be 60 by default, but 54 if the digit shift is 1 (thus focussing on the 3 part). This can for example be useful to determine the plotting area of a dataset (x-axis boundaries).","title":"What it does"},{"location":"reference_scale/#error-avoidance","text":"","title":"Error avoidance"},{"location":"reference_scale/#inputs","text":"","title":"Inputs"},{"location":"reference_scale/#number_list","text":"A list of floats","title":"number_list"},{"location":"reference_scale/#digit_shift","text":"An integer that .... The default value is 0.","title":"digit_shift"},{"location":"reference_scale/#output","text":"","title":"Output"},{"location":"reference_scale/#reference-scale_1","text":"A list of two floats that .....","title":"Reference scale"},{"location":"reference_scale/#examples","text":"","title":"Examples"},{"location":"reference_scale/#_1","text":"","title":""},{"location":"reference_scale/#tests","text":"","title":"Tests"},{"location":"reference_scale/#basic-test","text":"","title":"Basic test"},{"location":"reference_scale/#digit-shift-test","text":"","title":"digit shift test"},{"location":"reference_scale/#with-zero-as-a-boundary","text":"","title":"With zero as a boundary"},{"location":"reference_scale/#with-negatives","text":"","title":"With negatives"},{"location":"reference_scale/#zero-error-avoidance","text":"","title":"Zero error avoidance"},{"location":"reference_scale/#open-issues","text":"","title":"Open issues"},{"location":"register_color_bars/","text":"Register color bars What it does This function reads the user-defined color bars in a parameter file (names for the bars, and a list of the colors they contain, with the first being at the bottom of the bar, and the last at the top, and the others in between). It then creates the color bars and stores them in the list of available color maps. color_bars = parameters['color_bars'] # This dictionary stores the dictionaries for each color bar color_bar_dictionary: dict = {} # These colors are the three base keys of each bar color dictionary # Each dictionary contains a tuple of tuples for each base colors # Each of these sub-tuples cotains a step (between 0 and 1), # and a tone of the basic color in question (red, green, or blue) # This is repeated. The second value can be different # if cretaing discontinuities. # See https://matplotlib.org/stable/gallery/color/custom_cmap.html # for details base_colors_for_color_bar = ['red', 'green', 'blue'] # We fill the color bar dictionary for color_bar in color_bars: # We read the color list color_bar_colors = color_bars[color_bar] # We set the color steps, based on the color list color_steps = np.linspace(0, 1, len(color_bar_colors)) color_bar_dictionary[color_bar] = {} for base_color_index, base_color in enumerate( base_colors_for_color_bar ): # We create a list of entries for that base color # It is a list so that we can append, # but we will need to convert it to a tuple base_color_entries = [] for color_bar_index, (color_step, color_bar_color) in enumerate( zip(color_steps, color_bar_colors) ): # We get the ton by getting the RGB values of the # color bar color and taking the corresponding base index color_bar_color_tone = get_rgb_from_name( color_bar_color, parameters )[base_color_index] base_color_entries.append( # The subtuples consist of the color step ( color_step, # And the tone of the base color # for the color corresponding # to the step color_bar_color_tone, # This iis repeated for continuous schemes # See # https://matplotlib.org/stable/gallery/color/custom_cmap.html # for details color_bar_color_tone, ) ) # We now convert the list to a tuple and put it into # the dictionary color_bar_dictionary[color_bar][base_color] = tuple( base_color_entries ) # We now add the color bars to the color maps for color_bar in color_bars: color_bar_to_register = matplotlib.colors.LinearSegmentedColormap( color_bar, color_bar_dictionary[color_bar] ) if color_bar_to_register.name not in matplotlib.pyplot.colormaps(): matplotlib.colormaps.register(color_bar_to_register) Inputs Output Examples Tests Open issues","title":"Register color bars"},{"location":"register_color_bars/#register-color-bars","text":"","title":"Register color bars"},{"location":"register_color_bars/#what-it-does","text":"This function reads the user-defined color bars in a parameter file (names for the bars, and a list of the colors they contain, with the first being at the bottom of the bar, and the last at the top, and the others in between). It then creates the color bars and stores them in the list of available color maps. color_bars = parameters['color_bars'] # This dictionary stores the dictionaries for each color bar color_bar_dictionary: dict = {} # These colors are the three base keys of each bar color dictionary # Each dictionary contains a tuple of tuples for each base colors # Each of these sub-tuples cotains a step (between 0 and 1), # and a tone of the basic color in question (red, green, or blue) # This is repeated. The second value can be different # if cretaing discontinuities. # See https://matplotlib.org/stable/gallery/color/custom_cmap.html # for details base_colors_for_color_bar = ['red', 'green', 'blue'] # We fill the color bar dictionary for color_bar in color_bars: # We read the color list color_bar_colors = color_bars[color_bar] # We set the color steps, based on the color list color_steps = np.linspace(0, 1, len(color_bar_colors)) color_bar_dictionary[color_bar] = {} for base_color_index, base_color in enumerate( base_colors_for_color_bar ): # We create a list of entries for that base color # It is a list so that we can append, # but we will need to convert it to a tuple base_color_entries = [] for color_bar_index, (color_step, color_bar_color) in enumerate( zip(color_steps, color_bar_colors) ): # We get the ton by getting the RGB values of the # color bar color and taking the corresponding base index color_bar_color_tone = get_rgb_from_name( color_bar_color, parameters )[base_color_index] base_color_entries.append( # The subtuples consist of the color step ( color_step, # And the tone of the base color # for the color corresponding # to the step color_bar_color_tone, # This iis repeated for continuous schemes # See # https://matplotlib.org/stable/gallery/color/custom_cmap.html # for details color_bar_color_tone, ) ) # We now convert the list to a tuple and put it into # the dictionary color_bar_dictionary[color_bar][base_color] = tuple( base_color_entries ) # We now add the color bars to the color maps for color_bar in color_bars: color_bar_to_register = matplotlib.colors.LinearSegmentedColormap( color_bar, color_bar_dictionary[color_bar] ) if color_bar_to_register.name not in matplotlib.pyplot.colormaps(): matplotlib.colormaps.register(color_bar_to_register)","title":"What it does"},{"location":"register_color_bars/#inputs","text":"","title":"Inputs"},{"location":"register_color_bars/#_1","text":"","title":""},{"location":"register_color_bars/#output","text":"","title":"Output"},{"location":"register_color_bars/#_2","text":"","title":""},{"location":"register_color_bars/#examples","text":"","title":"Examples"},{"location":"register_color_bars/#_3","text":"","title":""},{"location":"register_color_bars/#tests","text":"","title":"Tests"},{"location":"register_color_bars/#_4","text":"","title":""},{"location":"register_color_bars/#open-issues","text":"","title":"Open issues"},{"location":"rgb_color_list/","text":"RGB color list What it does Gets a list of RGB codes for a list of color names. Inputs Output Examples Tests Open issues","title":"RGB color list"},{"location":"rgb_color_list/#rgb-color-list","text":"","title":"RGB color list"},{"location":"rgb_color_list/#what-it-does","text":"Gets a list of RGB codes for a list of color names.","title":"What it does"},{"location":"rgb_color_list/#inputs","text":"","title":"Inputs"},{"location":"rgb_color_list/#_1","text":"","title":""},{"location":"rgb_color_list/#output","text":"","title":"Output"},{"location":"rgb_color_list/#_2","text":"","title":""},{"location":"rgb_color_list/#examples","text":"","title":"Examples"},{"location":"rgb_color_list/#_3","text":"","title":""},{"location":"rgb_color_list/#tests","text":"","title":"Tests"},{"location":"rgb_color_list/#_4","text":"","title":""},{"location":"rgb_color_list/#open-issues","text":"","title":"Open issues"},{"location":"rgba_code_color/","text":"RGBA code color What it does Gets an RGBA string from a color RGB tuple. This is useful for plotly. The A part is the color opacity. Inputs Output Examples Tests Open issues","title":"RGBA code color"},{"location":"rgba_code_color/#rgba-code-color","text":"","title":"RGBA code color"},{"location":"rgba_code_color/#what-it-does","text":"Gets an RGBA string from a color RGB tuple. This is useful for plotly. The A part is the color opacity.","title":"What it does"},{"location":"rgba_code_color/#inputs","text":"","title":"Inputs"},{"location":"rgba_code_color/#_1","text":"","title":""},{"location":"rgba_code_color/#output","text":"","title":"Output"},{"location":"rgba_code_color/#_2","text":"","title":""},{"location":"rgba_code_color/#examples","text":"","title":"Examples"},{"location":"rgba_code_color/#_3","text":"","title":""},{"location":"rgba_code_color/#tests","text":"","title":"Tests"},{"location":"rgba_code_color/#_4","text":"","title":""},{"location":"rgba_code_color/#open-issues","text":"","title":"Open issues"},{"location":"save_dataframe/","text":"Save DataFrame What it does This function saves a pandas DataFrame to a number of file formats and an output folder that are all specified in a TOML parameters file (under a [files.dataframe_outputs] heading). Note that for some file types, you might need to install additional libraries. Also note that some formats will be saved into a group file that can contain several other DataFrames (for example sheets into an Excel workbook or tables into an SQL database). DataFrame_name will be the file name if the file format does not use group files. If the format does use a group file, then DataFrame_name will be used for the sub-elements (sheets, tables, for example), and groupfile_name will be used for the file name (you can of course use the same value for both), and will be unused if the file format does not use group files. Inputs Output Examples Tests Open issues XML issues Bug to fix: XML does not accet a number to start names (or various case variations of xml), which must currently be handled by the user (who must avoid these). Other bug: Removing non-alphanumeric characters in the index does not seem to work (for xml and stata) Unsupported formats gbq and orc outputs are not currently supported, as gbq is not a local file format, but a cloud-based one and orc does not seem to work with pyarrow (at least in Windows). Note that Pandas has a few more export formats that we skipped orc is not supported in arrows (ar least on Windows) https://stackoverflow.com/questions/58822095/no-module-named-pyarrow-orc gbq is about Google cloud storage, not about local files https://cloud.google.com/bigquery/docs/introduction Note that clipboard does not produce a file, but can still be used locally, so the function supports it.","title":"Save DataFrame"},{"location":"save_dataframe/#save-dataframe","text":"","title":"Save DataFrame"},{"location":"save_dataframe/#what-it-does","text":"This function saves a pandas DataFrame to a number of file formats and an output folder that are all specified in a TOML parameters file (under a [files.dataframe_outputs] heading). Note that for some file types, you might need to install additional libraries. Also note that some formats will be saved into a group file that can contain several other DataFrames (for example sheets into an Excel workbook or tables into an SQL database). DataFrame_name will be the file name if the file format does not use group files. If the format does use a group file, then DataFrame_name will be used for the sub-elements (sheets, tables, for example), and groupfile_name will be used for the file name (you can of course use the same value for both), and will be unused if the file format does not use group files.","title":"What it does"},{"location":"save_dataframe/#inputs","text":"","title":"Inputs"},{"location":"save_dataframe/#_1","text":"","title":""},{"location":"save_dataframe/#output","text":"","title":"Output"},{"location":"save_dataframe/#_2","text":"","title":""},{"location":"save_dataframe/#examples","text":"","title":"Examples"},{"location":"save_dataframe/#_3","text":"","title":""},{"location":"save_dataframe/#tests","text":"","title":"Tests"},{"location":"save_dataframe/#_4","text":"","title":""},{"location":"save_dataframe/#open-issues","text":"","title":"Open issues"},{"location":"save_dataframe/#xml-issues","text":"Bug to fix: XML does not accet a number to start names (or various case variations of xml), which must currently be handled by the user (who must avoid these). Other bug: Removing non-alphanumeric characters in the index does not seem to work (for xml and stata)","title":"XML issues"},{"location":"save_dataframe/#unsupported-formats","text":"gbq and orc outputs are not currently supported, as gbq is not a local file format, but a cloud-based one and orc does not seem to work with pyarrow (at least in Windows). Note that Pandas has a few more export formats that we skipped orc is not supported in arrows (ar least on Windows) https://stackoverflow.com/questions/58822095/no-module-named-pyarrow-orc gbq is about Google cloud storage, not about local files https://cloud.google.com/bigquery/docs/introduction Note that clipboard does not produce a file, but can still be used locally, so the function supports it.","title":"Unsupported formats"},{"location":"save_figure/","text":"Save figure What it does This function saves a Matplolib figure to a number of file formats and an output folder that are all specified in a TOML parameters file (under a [files.figures_outputs] heading). (Use something more explicit than parameters) Inputs Output Examples Tests Open issues","title":"Save figure"},{"location":"save_figure/#save-figure","text":"","title":"Save figure"},{"location":"save_figure/#what-it-does","text":"This function saves a Matplolib figure to a number of file formats and an output folder that are all specified in a TOML parameters file (under a [files.figures_outputs] heading). (Use something more explicit than parameters)","title":"What it does"},{"location":"save_figure/#inputs","text":"","title":"Inputs"},{"location":"save_figure/#_1","text":"","title":""},{"location":"save_figure/#output","text":"","title":"Output"},{"location":"save_figure/#_2","text":"","title":""},{"location":"save_figure/#examples","text":"","title":"Examples"},{"location":"save_figure/#_3","text":"","title":""},{"location":"save_figure/#tests","text":"","title":"Tests"},{"location":"save_figure/#_4","text":"","title":""},{"location":"save_figure/#open-issues","text":"","title":"Open issues"},{"location":"set_nested_value/","text":"Set nested values What it does This sets the value of a nested element of a dictionary (for example coming from a TOML configuration file) Inputs Output Examples Tests Open issues","title":"Set nested values"},{"location":"set_nested_value/#set-nested-values","text":"","title":"Set nested values"},{"location":"set_nested_value/#what-it-does","text":"This sets the value of a nested element of a dictionary (for example coming from a TOML configuration file)","title":"What it does"},{"location":"set_nested_value/#inputs","text":"","title":"Inputs"},{"location":"set_nested_value/#_1","text":"","title":""},{"location":"set_nested_value/#output","text":"","title":"Output"},{"location":"set_nested_value/#_2","text":"","title":""},{"location":"set_nested_value/#examples","text":"","title":"Examples"},{"location":"set_nested_value/#_3","text":"","title":""},{"location":"set_nested_value/#tests","text":"","title":"Tests"},{"location":"set_nested_value/#_4","text":"","title":""},{"location":"set_nested_value/#open-issues","text":"","title":"Open issues"},{"location":"string_to_float/","text":"String to float What it does Converts strings to floats, and to zero if the string is not a float. Inputs Output Examples Tests Open issues","title":"String to float"},{"location":"string_to_float/#string-to-float","text":"","title":"String to float"},{"location":"string_to_float/#what-it-does","text":"Converts strings to floats, and to zero if the string is not a float.","title":"What it does"},{"location":"string_to_float/#inputs","text":"","title":"Inputs"},{"location":"string_to_float/#_1","text":"","title":""},{"location":"string_to_float/#output","text":"","title":"Output"},{"location":"string_to_float/#_2","text":"","title":""},{"location":"string_to_float/#examples","text":"","title":"Examples"},{"location":"string_to_float/#_3","text":"","title":""},{"location":"string_to_float/#tests","text":"","title":"Tests"},{"location":"string_to_float/#_4","text":"","title":""},{"location":"string_to_float/#open-issues","text":"","title":"Open issues"},{"location":"update_database_table/","text":"Update database table What it does This function updates the values of one row of a table in a database. If you want to change multiple rows (with a different value for each row), then you need to iterate over the rows. Inputs Output Examples Tests Open issues","title":"Update database table"},{"location":"update_database_table/#update-database-table","text":"","title":"Update database table"},{"location":"update_database_table/#what-it-does","text":"This function updates the values of one row of a table in a database. If you want to change multiple rows (with a different value for each row), then you need to iterate over the rows.","title":"What it does"},{"location":"update_database_table/#inputs","text":"","title":"Inputs"},{"location":"update_database_table/#_1","text":"","title":""},{"location":"update_database_table/#output","text":"","title":"Output"},{"location":"update_database_table/#_2","text":"","title":""},{"location":"update_database_table/#examples","text":"","title":"Examples"},{"location":"update_database_table/#_3","text":"","title":""},{"location":"update_database_table/#tests","text":"","title":"Tests"},{"location":"update_database_table/#_4","text":"","title":""},{"location":"update_database_table/#open-issues","text":"","title":"Open issues"}]}